{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Doit\\\\Desktop\\\\azuton_lp\\\\src\\\\components\\\\TestSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TestSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestSection = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('hd-voice');\n  const [isCalling, setIsCalling] = useState(false);\n  const [isInCall, setIsInCall] = useState(false);\n\n  // Estados para Texto para Voz\n  const [textInput, setTextInput] = useState('');\n  const [isConverting, setIsConverting] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Move o botão circular para baixo quando o componente carregar\n  useEffect(() => {\n    const moveButton = () => {\n      if (window.moveVapiButtonToBottom) {\n        window.moveVapiButtonToBottom();\n      }\n    };\n\n    // Move imediatamente\n    moveButton();\n\n    // Move a cada 3 segundos\n    const interval = setInterval(moveButton, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleCall = async () => {\n    if (isCalling) return;\n\n    // Se já está em chamada, desliga\n    if (isInCall) {\n      handleEndCall();\n      return;\n    }\n\n    // Move o botão circular para baixo antes de iniciar (não esconde completamente)\n    if (window.moveVapiButtonToBottom) {\n      window.moveVapiButtonToBottom();\n    }\n    setIsCalling(true);\n    try {\n      console.log('Botão LIGAR AGORA: Tentando iniciar chamada...');\n\n      // Tenta usar o SDK diretamente primeiro\n      if (window.startVapiCall) {\n        console.log('Tentando via startVapiCall...');\n        try {\n          await window.startVapiCall();\n          console.log('Chamada iniciada via SDK!');\n\n          // Marca como em chamada após 2 segundos\n          setTimeout(() => {\n            setIsInCall(true);\n            setIsCalling(false);\n            console.log('Estado alterado para: em chamada');\n          }, 2000);\n          return;\n        } catch (sdkError) {\n          console.log('SDK falhou, tentando fallback:', sdkError);\n        }\n      }\n      console.log('Fallback: Procurando botão circular do Vapi...');\n\n      // Aguarda um pouco para o botão circular aparecer\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Procura pelo botão circular do Vapi que funciona\n      let vapiButton = null;\n\n      // Busca por todos os botões na página\n      const allButtons = document.querySelectorAll('button');\n      console.log('Total de botões encontrados:', allButtons.length);\n      for (const button of allButtons) {\n        // Pula o botão atual (LIGAR AGORA)\n        if (button.textContent.includes('LIGAR AGORA') || button.textContent.includes('CONECTANDO') || button.textContent.includes('DESLIGAR')) {\n          continue;\n        }\n        const style = window.getComputedStyle(button);\n        const position = style.position;\n        const bottom = style.bottom;\n        const right = style.right;\n        const width = style.width;\n        const height = style.height;\n\n        // Botão circular pequeno fixo (provavelmente o Vapi)\n        if (position === 'fixed' && (bottom.includes('px') || right.includes('px')) && width === height && parseInt(width) < 100 && parseInt(width) > 40) {\n          vapiButton = button;\n          console.log('Botão circular Vapi encontrado:', button);\n          break;\n        }\n      }\n      if (vapiButton) {\n        console.log('Clicando no botão circular do Vapi...');\n        vapiButton.click();\n        console.log('Botão circular Vapi clicado com sucesso!');\n\n        // Marca como em chamada após 2 segundos\n        setTimeout(() => {\n          setIsInCall(true);\n          setIsCalling(false);\n          console.log('Estado alterado para: em chamada');\n        }, 2000);\n      } else {\n        console.log('Botão circular não encontrado, tentando buscar por outros seletores...');\n\n        // Busca por seletores específicos do Vapi\n        const vapiSelectors = ['button[data-vapi-widget]', '.vapi-widget-button', 'button[style*=\"position: fixed\"]', 'button[style*=\"bottom\"]', 'button[style*=\"right\"]', 'button[class*=\"vapi\"]', 'button[class*=\"call\"]'];\n        for (const selector of vapiSelectors) {\n          const button = document.querySelector(selector);\n          if (button && !button.textContent.includes('LIGAR AGORA')) {\n            console.log('Botão encontrado com seletor:', selector, button);\n            button.click();\n            console.log('Botão clicado com sucesso via seletor!');\n\n            // Marca como em chamada\n            setTimeout(() => {\n              setIsInCall(true);\n              setIsCalling(false);\n              console.log('Estado alterado para: em chamada');\n            }, 2000);\n            return;\n          }\n        }\n        throw new Error('Botão circular do Vapi não encontrado');\n      }\n    } catch (error) {\n      console.error('Erro ao iniciar chamada:', error);\n      console.error('Erro completo:', {\n        message: error.message,\n        stack: error.stack,\n        name: error.name\n      });\n      alert(`Erro ao conectar com o agente: ${error.message || 'Erro desconhecido'}`);\n      setIsCalling(false);\n    }\n  };\n  const handleEndCall = async () => {\n    try {\n      console.log('Desligando chamada...');\n\n      // Procura pelo botão de desligar ou fecha a interface\n      if (window.vapiInstance) {\n        // Tenta usar o método stop se disponível\n        if (window.vapiInstance.stop) {\n          await window.vapiInstance.stop();\n          console.log('Chamada desligada via stop()');\n        } else if (window.vapiInstance.end) {\n          await window.vapiInstance.end();\n          console.log('Chamada desligada via end()');\n        } else {\n          console.log('Método de desligar não encontrado');\n        }\n      }\n\n      // Procura por botão de fechar/desligar na interface\n      const closeButtons = document.querySelectorAll('button[aria-label*=\"close\"], button[title*=\"close\"], button[aria-label*=\"end\"], button[title*=\"end\"]');\n      for (const button of closeButtons) {\n        button.click();\n        console.log('Botão de fechar clicado');\n        break;\n      }\n      setIsInCall(false);\n      console.log('Estado alterado para: não em chamada');\n    } catch (error) {\n      console.error('Erro ao desligar:', error);\n      // Mesmo com erro, marca como não em chamada\n      setIsInCall(false);\n    }\n  };\n\n  // Função para converter texto em voz usando Web Speech API (com fallback para Gemini)\n  const handleTextToSpeech = async () => {\n    if (!textInput.trim()) {\n      alert('Por favor, digite uma mensagem para converter em voz.');\n      return;\n    }\n    setIsConverting(true);\n    try {\n      console.log('Convertendo texto para voz:', textInput);\n\n      // Escolhe o método baseado na seleção do usuário\n      switch (ttsMethod) {\n        case 'google-tts':\n          await convertWithGoogleTTS();\n          break;\n        case 'external':\n          await convertWithExternalAPI();\n          break;\n        case 'web-speech':\n        default:\n          if (window.speechSynthesis && window.speechSynthesis.speak) {\n            await convertWithWebSpeech();\n          } else {\n            // Fallback para Google TTS se Web Speech não estiver disponível\n            await convertWithGoogleTTS();\n          }\n          break;\n      }\n    } catch (error) {\n      console.error('Erro ao converter texto para voz:', error);\n      alert(`Erro ao converter texto para voz: ${error.message}`);\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  // Função para converter usando Web Speech API\n  const convertWithWebSpeech = () => {\n    return new Promise((resolve, reject) => {\n      const synthesis = window.speechSynthesis;\n\n      // Para o áudio anterior se estiver tocando\n      synthesis.cancel();\n\n      // Cria um novo utterance\n      const utterance = new SpeechSynthesisUtterance(textInput);\n\n      // Configurações da voz\n      utterance.lang = 'pt-BR';\n      utterance.rate = 0.9;\n      utterance.pitch = 1.0;\n      utterance.volume = 1.0;\n\n      // Tenta usar uma voz em português\n      const voices = synthesis.getVoices();\n      const portugueseVoice = voices.find(voice => voice.lang.startsWith('pt') || voice.lang.includes('Brazil'));\n      if (portugueseVoice) {\n        utterance.voice = portugueseVoice;\n        console.log('Usando voz em português:', portugueseVoice.name);\n      }\n\n      // Event listeners\n      utterance.onstart = () => {\n        console.log('Iniciando reprodução de áudio');\n        setIsPlaying(true);\n      };\n      utterance.onend = () => {\n        console.log('Reprodução de áudio finalizada');\n        setIsPlaying(false);\n        resolve();\n      };\n      utterance.onerror = event => {\n        console.error('Erro na síntese de voz:', event.error);\n        setIsPlaying(false);\n        reject(new Error(`Erro na síntese: ${event.error}`));\n      };\n\n      // Inicia a síntese\n      synthesis.speak(utterance);\n    });\n  };\n\n  // Função para converter usando API externa (Google Text-to-Speech ou similar)\n  const convertWithExternalAPI = async () => {\n    try {\n      // Para demonstração, vamos usar uma API de TTS gratuita\n      const response = await fetch('https://api.voicerss.org/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          key: 'demo',\n          // Chave demo - para produção usar uma chave real\n          src: textInput,\n          hl: 'pt-br',\n          f: '44khz_16bit_mono',\n          c: 'mp3'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erro na API de TTS externa');\n      }\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n\n      // Cria elemento de áudio\n      const audio = new Audio(audioUrl);\n      audio.onplay = () => {\n        console.log('Iniciando reprodução de áudio externo');\n        setIsPlaying(true);\n      };\n      audio.onended = () => {\n        console.log('Reprodução de áudio externo finalizada');\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl); // Limpa a URL\n      };\n      audio.onerror = event => {\n        console.error('Erro na reprodução de áudio externo:', event);\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl);\n        throw new Error('Erro ao reproduzir áudio externo');\n      };\n\n      // Inicia a reprodução\n      await audio.play();\n    } catch (error) {\n      console.error('Erro na API externa:', error);\n      // Se a API externa falhar, tenta novamente com Web Speech\n      console.log('Tentando fallback para Web Speech API...');\n      await convertWithWebSpeech();\n    }\n  };\n\n  // Função para parar o áudio\n  const stopAudio = () => {\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      setIsPlaying(false);\n    }\n  };\n\n  // Função alternativa usando Google Text-to-Speech API (com a chave do Gemini fornecida)\n  const convertWithGoogleTTS = async () => {\n    try {\n      // Usando Google Cloud Text-to-Speech API\n      const response = await fetch('https://texttospeech.googleapis.com/v1/text:synthesize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Api-Key': 'AIzaSyAWcHbTlao3QeZ91t28uk4_CUMu_9Li-E0'\n        },\n        body: JSON.stringify({\n          input: {\n            text: textInput\n          },\n          voice: {\n            languageCode: 'pt-BR',\n            name: 'pt-BR-Wavenet-A',\n            // Voz feminina brasileira\n            ssmlGender: 'FEMALE'\n          },\n          audioConfig: {\n            audioEncoding: 'MP3',\n            speakingRate: 0.9,\n            pitch: 0.0,\n            volumeGainDb: 0.0\n          }\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erro na API Google TTS: ${response.status}`);\n      }\n      const data = await response.json();\n      const audioData = data.audioContent;\n\n      // Converte base64 para blob\n      const audioBlob = new Blob([Uint8Array.from(atob(audioData), c => c.charCodeAt(0))], {\n        type: 'audio/mp3'\n      });\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      audio.onplay = () => {\n        console.log('Iniciando reprodução com Google TTS');\n        setIsPlaying(true);\n      };\n      audio.onended = () => {\n        console.log('Reprodução com Google TTS finalizada');\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl);\n      };\n      audio.onerror = event => {\n        console.error('Erro na reprodução Google TTS:', event);\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl);\n        throw new Error('Erro ao reproduzir áudio Google TTS');\n      };\n      await audio.play();\n    } catch (error) {\n      console.error('Erro na Google TTS API:', error);\n      throw error;\n    }\n  };\n  const tabs = [{\n    id: 'hd-voice',\n    label: 'Voz HD IA'\n  }, {\n    id: 'text-to-speech',\n    label: 'Texto para Voz'\n  }, {\n    id: 'speech-to-text',\n    label: 'Voz para Texto'\n  }];\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'hd-voice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"test-title\",\n              children: \"VOZ HD IA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"test-subtitle\",\n              children: \"Voz HD verdadeira, ponta a ponta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"test-description\",\n            children: \"Vozes NaturalHD pr\\xF3prias e codecs de voz HD s\\xE3o alimentados por nossa rede global privada para entregar conversas mais naturais com clareza de chamada incompar\\xE1vel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"test-highlight\",\n            children: \"Experimente a diferen\\xE7a na qualidade da voz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"option-btn active\",\n              children: \"Vozes HD+ NaturalHD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"option-btn\",\n              children: \"Codec padr\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-primary btn-large ${isCalling ? 'calling' : ''} ${isInCall ? 'in-call' : ''}`,\n            onClick: handleCall,\n            disabled: isCalling,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: isCalling ? '⏳' : isInCall ? '📵' : '📞'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), isCalling ? 'CONECTANDO...' : isInCall ? 'DESLIGAR' : 'LIGAR AGORA']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this);\n      case 'text-to-speech':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"test-title\",\n              children: \"TEXTO PARA VOZ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"test-subtitle\",\n              children: \"Convers\\xE3o de texto para voz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"test-description\",\n            children: \"Aproveite vozes claras e naturais para uma melhor experi\\xEAncia de chamada com seus clientes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tts-methods\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Escolha o m\\xE9todo de s\\xEDntese:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"method-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `method-btn ${ttsMethod === 'web-speech' ? 'active' : ''}`,\n                onClick: () => setTtsMethod('web-speech'),\n                disabled: isConverting,\n                children: \"\\uD83C\\uDF10 Web Speech\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `method-btn ${ttsMethod === 'google-tts' ? 'active' : ''}`,\n                onClick: () => setTtsMethod('google-tts'),\n                disabled: isConverting,\n                children: \"\\uD83E\\uDD16 Google TTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `method-btn ${ttsMethod === 'external' ? 'active' : ''}`,\n                onClick: () => setTtsMethod('external'),\n                disabled: isConverting,\n                children: \"\\uD83D\\uDD17 API Externa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Digite sua mensagem aqui...\",\n              className: \"form-input\",\n              value: textInput,\n              onChange: e => setTextInput(e.target.value),\n              disabled: isConverting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-secondary ${isConverting ? 'converting' : ''}`,\n              onClick: handleTextToSpeech,\n              disabled: isConverting || !textInput.trim(),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: isConverting ? '⏳' : '🔊'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this), isConverting ? 'CONVERTENDO...' : 'CONVERTER PARA VOZ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              src: audioUrl,\n              controls: true,\n              className: \"audio-player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), isPlaying && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"playing-text\",\n              children: \"\\uD83C\\uDFB5 Reproduzindo \\xE1udio...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary btn-small\",\n              onClick: stopAudio,\n              children: \"\\u23F9\\uFE0F PARAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-primary btn-large ${isCalling ? 'calling' : ''}`,\n            onClick: handleCall,\n            disabled: isCalling,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: isCalling ? '⏳' : '🎤'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), isCalling ? 'CONECTANDO...' : 'LIGAR AGORA']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this);\n      case 'speech-to-text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"test-title\",\n              children: \"VOZ PARA TEXTO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"test-subtitle\",\n              children: \"Transcri\\xE7\\xE3o em tempo real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"test-description\",\n            children: \"Transforme \\xE1udio em texto com precis\\xE3o natural para conte\\xFAdo, comunica\\xE7\\xE3o e acessibilidade.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: \"\\uD83D\\uDD34\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this), \"GRAVAR \\xC1UDIO\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: \"\\uD83D\\uDCC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this), \"ENVIAR ARQUIVO\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-primary btn-large ${isCalling ? 'calling' : ''} ${isInCall ? 'in-call' : ''}`,\n            onClick: handleCall,\n            disabled: isCalling,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: isCalling ? '⏳' : isInCall ? '📵' : '📞'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), isCalling ? 'CONECTANDO...' : isInCall ? 'DESLIGAR' : 'LIGAR AGORA']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"test-section bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-tabs\",\n          children: tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `test-tab ${activeTab === tab.id ? 'active' : ''}`,\n            onClick: () => setActiveTab(tab.id),\n            children: tab.label\n          }, tab.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-card\",\n          children: renderContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 594,\n    columnNumber: 5\n  }, this);\n};\n_s(TestSection, \"13MEL3vXNiiSfw227M86DX/8vbo=\");\n_c = TestSection;\nexport default TestSection;\nvar _c;\n$RefreshReg$(_c, \"TestSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TestSection","_s","activeTab","setActiveTab","isCalling","setIsCalling","isInCall","setIsInCall","textInput","setTextInput","isConverting","setIsConverting","audioUrl","setAudioUrl","isPlaying","setIsPlaying","moveButton","window","moveVapiButtonToBottom","interval","setInterval","clearInterval","handleCall","handleEndCall","console","log","startVapiCall","setTimeout","sdkError","Promise","resolve","vapiButton","allButtons","document","querySelectorAll","length","button","textContent","includes","style","getComputedStyle","position","bottom","right","width","height","parseInt","click","vapiSelectors","selector","querySelector","Error","error","message","stack","name","alert","vapiInstance","stop","end","closeButtons","handleTextToSpeech","trim","ttsMethod","convertWithGoogleTTS","convertWithExternalAPI","speechSynthesis","speak","convertWithWebSpeech","reject","synthesis","cancel","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","voices","getVoices","portugueseVoice","find","voice","startsWith","onstart","onend","onerror","event","response","fetch","method","headers","body","URLSearchParams","key","src","hl","f","c","ok","audioBlob","blob","URL","createObjectURL","audio","Audio","onplay","onended","revokeObjectURL","play","stopAudio","JSON","stringify","input","text","languageCode","ssmlGender","audioConfig","audioEncoding","speakingRate","volumeGainDb","status","data","json","audioData","audioContent","Blob","Uint8Array","from","atob","charCodeAt","type","tabs","id","label","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","setTtsMethod","placeholder","value","onChange","e","target","controls","map","tab","_c","$RefreshReg$"],"sources":["C:/Users/Doit/Desktop/azuton_lp/src/components/TestSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TestSection.css';\n\nconst TestSection = () => {\n  const [activeTab, setActiveTab] = useState('hd-voice');\n  const [isCalling, setIsCalling] = useState(false);\n  const [isInCall, setIsInCall] = useState(false);\n  \n  // Estados para Texto para Voz\n  const [textInput, setTextInput] = useState('');\n  const [isConverting, setIsConverting] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Move o botão circular para baixo quando o componente carregar\n  useEffect(() => {\n    const moveButton = () => {\n      if (window.moveVapiButtonToBottom) {\n        window.moveVapiButtonToBottom();\n      }\n    };\n\n    // Move imediatamente\n    moveButton();\n    \n    // Move a cada 3 segundos\n    const interval = setInterval(moveButton, 3000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const handleCall = async () => {\n    if (isCalling) return;\n    \n    // Se já está em chamada, desliga\n    if (isInCall) {\n      handleEndCall();\n      return;\n    }\n    \n    // Move o botão circular para baixo antes de iniciar (não esconde completamente)\n    if (window.moveVapiButtonToBottom) {\n      window.moveVapiButtonToBottom();\n    }\n    \n    setIsCalling(true);\n    \n    try {\n      console.log('Botão LIGAR AGORA: Tentando iniciar chamada...');\n      \n      // Tenta usar o SDK diretamente primeiro\n      if (window.startVapiCall) {\n        console.log('Tentando via startVapiCall...');\n        try {\n          await window.startVapiCall();\n          console.log('Chamada iniciada via SDK!');\n          \n          // Marca como em chamada após 2 segundos\n          setTimeout(() => {\n            setIsInCall(true);\n            setIsCalling(false);\n            console.log('Estado alterado para: em chamada');\n          }, 2000);\n          return;\n        } catch (sdkError) {\n          console.log('SDK falhou, tentando fallback:', sdkError);\n        }\n      }\n      \n      console.log('Fallback: Procurando botão circular do Vapi...');\n      \n      // Aguarda um pouco para o botão circular aparecer\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Procura pelo botão circular do Vapi que funciona\n      let vapiButton = null;\n      \n      // Busca por todos os botões na página\n      const allButtons = document.querySelectorAll('button');\n      console.log('Total de botões encontrados:', allButtons.length);\n      \n      for (const button of allButtons) {\n        // Pula o botão atual (LIGAR AGORA)\n        if (button.textContent.includes('LIGAR AGORA') || \n            button.textContent.includes('CONECTANDO') ||\n            button.textContent.includes('DESLIGAR')) {\n          continue;\n        }\n        \n        const style = window.getComputedStyle(button);\n        const position = style.position;\n        const bottom = style.bottom;\n        const right = style.right;\n        const width = style.width;\n        const height = style.height;\n        \n        // Botão circular pequeno fixo (provavelmente o Vapi)\n        if (position === 'fixed' && \n            (bottom.includes('px') || right.includes('px')) &&\n            width === height && \n            parseInt(width) < 100 &&\n            parseInt(width) > 40) {\n          vapiButton = button;\n          console.log('Botão circular Vapi encontrado:', button);\n          break;\n        }\n      }\n      \n      if (vapiButton) {\n        console.log('Clicando no botão circular do Vapi...');\n        vapiButton.click();\n        console.log('Botão circular Vapi clicado com sucesso!');\n        \n        // Marca como em chamada após 2 segundos\n        setTimeout(() => {\n          setIsInCall(true);\n          setIsCalling(false);\n          console.log('Estado alterado para: em chamada');\n        }, 2000);\n        \n      } else {\n        console.log('Botão circular não encontrado, tentando buscar por outros seletores...');\n        \n        // Busca por seletores específicos do Vapi\n        const vapiSelectors = [\n          'button[data-vapi-widget]',\n          '.vapi-widget-button',\n          'button[style*=\"position: fixed\"]',\n          'button[style*=\"bottom\"]',\n          'button[style*=\"right\"]',\n          'button[class*=\"vapi\"]',\n          'button[class*=\"call\"]'\n        ];\n        \n        for (const selector of vapiSelectors) {\n          const button = document.querySelector(selector);\n          if (button && !button.textContent.includes('LIGAR AGORA')) {\n            console.log('Botão encontrado com seletor:', selector, button);\n            button.click();\n            console.log('Botão clicado com sucesso via seletor!');\n            \n            // Marca como em chamada\n            setTimeout(() => {\n              setIsInCall(true);\n              setIsCalling(false);\n              console.log('Estado alterado para: em chamada');\n            }, 2000);\n            return;\n          }\n        }\n        \n        throw new Error('Botão circular do Vapi não encontrado');\n      }\n      \n    } catch (error) {\n      console.error('Erro ao iniciar chamada:', error);\n      console.error('Erro completo:', {\n        message: error.message,\n        stack: error.stack,\n        name: error.name\n      });\n      alert(`Erro ao conectar com o agente: ${error.message || 'Erro desconhecido'}`);\n      setIsCalling(false);\n    }\n  };\n\n  const handleEndCall = async () => {\n    try {\n      console.log('Desligando chamada...');\n      \n      // Procura pelo botão de desligar ou fecha a interface\n      if (window.vapiInstance) {\n        // Tenta usar o método stop se disponível\n        if (window.vapiInstance.stop) {\n          await window.vapiInstance.stop();\n          console.log('Chamada desligada via stop()');\n        } else if (window.vapiInstance.end) {\n          await window.vapiInstance.end();\n          console.log('Chamada desligada via end()');\n        } else {\n          console.log('Método de desligar não encontrado');\n        }\n      }\n      \n      // Procura por botão de fechar/desligar na interface\n      const closeButtons = document.querySelectorAll('button[aria-label*=\"close\"], button[title*=\"close\"], button[aria-label*=\"end\"], button[title*=\"end\"]');\n      for (const button of closeButtons) {\n        button.click();\n        console.log('Botão de fechar clicado');\n        break;\n      }\n      \n      setIsInCall(false);\n      console.log('Estado alterado para: não em chamada');\n      \n    } catch (error) {\n      console.error('Erro ao desligar:', error);\n      // Mesmo com erro, marca como não em chamada\n      setIsInCall(false);\n    }\n  };\n\n  // Função para converter texto em voz usando Web Speech API (com fallback para Gemini)\n  const handleTextToSpeech = async () => {\n    if (!textInput.trim()) {\n      alert('Por favor, digite uma mensagem para converter em voz.');\n      return;\n    }\n\n    setIsConverting(true);\n\n    try {\n      console.log('Convertendo texto para voz:', textInput);\n      \n      // Escolhe o método baseado na seleção do usuário\n      switch (ttsMethod) {\n        case 'google-tts':\n          await convertWithGoogleTTS();\n          break;\n        case 'external':\n          await convertWithExternalAPI();\n          break;\n        case 'web-speech':\n        default:\n          if (window.speechSynthesis && window.speechSynthesis.speak) {\n            await convertWithWebSpeech();\n          } else {\n            // Fallback para Google TTS se Web Speech não estiver disponível\n            await convertWithGoogleTTS();\n          }\n          break;\n      }\n\n    } catch (error) {\n      console.error('Erro ao converter texto para voz:', error);\n      alert(`Erro ao converter texto para voz: ${error.message}`);\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  // Função para converter usando Web Speech API\n  const convertWithWebSpeech = () => {\n    return new Promise((resolve, reject) => {\n      const synthesis = window.speechSynthesis;\n      \n      // Para o áudio anterior se estiver tocando\n      synthesis.cancel();\n\n      // Cria um novo utterance\n      const utterance = new SpeechSynthesisUtterance(textInput);\n      \n      // Configurações da voz\n      utterance.lang = 'pt-BR';\n      utterance.rate = 0.9;\n      utterance.pitch = 1.0;\n      utterance.volume = 1.0;\n\n      // Tenta usar uma voz em português\n      const voices = synthesis.getVoices();\n      const portugueseVoice = voices.find(voice => \n        voice.lang.startsWith('pt') || voice.lang.includes('Brazil')\n      );\n      \n      if (portugueseVoice) {\n        utterance.voice = portugueseVoice;\n        console.log('Usando voz em português:', portugueseVoice.name);\n      }\n\n      // Event listeners\n      utterance.onstart = () => {\n        console.log('Iniciando reprodução de áudio');\n        setIsPlaying(true);\n      };\n\n      utterance.onend = () => {\n        console.log('Reprodução de áudio finalizada');\n        setIsPlaying(false);\n        resolve();\n      };\n\n      utterance.onerror = (event) => {\n        console.error('Erro na síntese de voz:', event.error);\n        setIsPlaying(false);\n        reject(new Error(`Erro na síntese: ${event.error}`));\n      };\n\n      // Inicia a síntese\n      synthesis.speak(utterance);\n    });\n  };\n\n  // Função para converter usando API externa (Google Text-to-Speech ou similar)\n  const convertWithExternalAPI = async () => {\n    try {\n      // Para demonstração, vamos usar uma API de TTS gratuita\n      const response = await fetch('https://api.voicerss.org/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          key: 'demo', // Chave demo - para produção usar uma chave real\n          src: textInput,\n          hl: 'pt-br',\n          f: '44khz_16bit_mono',\n          c: 'mp3'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Erro na API de TTS externa');\n      }\n\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      \n      // Cria elemento de áudio\n      const audio = new Audio(audioUrl);\n      \n      audio.onplay = () => {\n        console.log('Iniciando reprodução de áudio externo');\n        setIsPlaying(true);\n      };\n\n      audio.onended = () => {\n        console.log('Reprodução de áudio externo finalizada');\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl); // Limpa a URL\n      };\n\n      audio.onerror = (event) => {\n        console.error('Erro na reprodução de áudio externo:', event);\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl);\n        throw new Error('Erro ao reproduzir áudio externo');\n      };\n\n      // Inicia a reprodução\n      await audio.play();\n      \n    } catch (error) {\n      console.error('Erro na API externa:', error);\n      // Se a API externa falhar, tenta novamente com Web Speech\n      console.log('Tentando fallback para Web Speech API...');\n      await convertWithWebSpeech();\n    }\n  };\n\n  // Função para parar o áudio\n  const stopAudio = () => {\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      setIsPlaying(false);\n    }\n  };\n\n  // Função alternativa usando Google Text-to-Speech API (com a chave do Gemini fornecida)\n  const convertWithGoogleTTS = async () => {\n    try {\n      // Usando Google Cloud Text-to-Speech API\n      const response = await fetch('https://texttospeech.googleapis.com/v1/text:synthesize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Api-Key': 'AIzaSyAWcHbTlao3QeZ91t28uk4_CUMu_9Li-E0'\n        },\n        body: JSON.stringify({\n          input: { text: textInput },\n          voice: {\n            languageCode: 'pt-BR',\n            name: 'pt-BR-Wavenet-A', // Voz feminina brasileira\n            ssmlGender: 'FEMALE'\n          },\n          audioConfig: {\n            audioEncoding: 'MP3',\n            speakingRate: 0.9,\n            pitch: 0.0,\n            volumeGainDb: 0.0\n          }\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Erro na API Google TTS: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const audioData = data.audioContent;\n      \n      // Converte base64 para blob\n      const audioBlob = new Blob([\n        Uint8Array.from(atob(audioData), c => c.charCodeAt(0))\n      ], { type: 'audio/mp3' });\n      \n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      \n      audio.onplay = () => {\n        console.log('Iniciando reprodução com Google TTS');\n        setIsPlaying(true);\n      };\n\n      audio.onended = () => {\n        console.log('Reprodução com Google TTS finalizada');\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl);\n      };\n\n      audio.onerror = (event) => {\n        console.error('Erro na reprodução Google TTS:', event);\n        setIsPlaying(false);\n        URL.revokeObjectURL(audioUrl);\n        throw new Error('Erro ao reproduzir áudio Google TTS');\n      };\n\n      await audio.play();\n      \n    } catch (error) {\n      console.error('Erro na Google TTS API:', error);\n      throw error;\n    }\n  };\n\n  const tabs = [\n    { id: 'hd-voice', label: 'Voz HD IA' },\n    { id: 'text-to-speech', label: 'Texto para Voz' },\n    { id: 'speech-to-text', label: 'Voz para Texto' }\n  ];\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'hd-voice':\n        return (\n          <div className=\"test-content\">\n            <div className=\"test-header\">\n              <h3 className=\"test-title\">VOZ HD IA</h3>\n              <h4 className=\"test-subtitle\">Voz HD verdadeira, ponta a ponta</h4>\n            </div>\n            <p className=\"test-description\">\n              Vozes NaturalHD próprias e codecs de voz HD são alimentados por nossa rede global privada para entregar conversas mais naturais com clareza de chamada incomparável.\n            </p>\n            <p className=\"test-highlight\">Experimente a diferença na qualidade da voz</p>\n            <div className=\"test-options\">\n              <button className=\"option-btn active\">Vozes HD+ NaturalHD</button>\n              <button className=\"option-btn\">Codec padrão</button>\n            </div>\n            <button \n              className={`btn btn-primary btn-large ${isCalling ? 'calling' : ''} ${isInCall ? 'in-call' : ''}`} \n              onClick={handleCall}\n              disabled={isCalling}\n            >\n              <span className=\"btn-icon\">\n                {isCalling ? '⏳' : isInCall ? '📵' : '📞'}\n              </span>\n              {isCalling ? 'CONECTANDO...' : isInCall ? 'DESLIGAR' : 'LIGAR AGORA'}\n            </button>\n          </div>\n        );\n      \n      case 'text-to-speech':\n        return (\n          <div className=\"test-content\">\n            <div className=\"test-header\">\n              <h3 className=\"test-title\">TEXTO PARA VOZ</h3>\n              <h4 className=\"test-subtitle\">Conversão de texto para voz</h4>\n            </div>\n            <p className=\"test-description\">\n              Aproveite vozes claras e naturais para uma melhor experiência de chamada com seus clientes.\n            </p>\n            \n            {/* Seleção de método TTS */}\n            <div className=\"tts-methods\">\n              <h5>Escolha o método de síntese:</h5>\n              <div className=\"method-buttons\">\n                <button \n                  className={`method-btn ${ttsMethod === 'web-speech' ? 'active' : ''}`}\n                  onClick={() => setTtsMethod('web-speech')}\n                  disabled={isConverting}\n                >\n                  🌐 Web Speech\n                </button>\n                <button \n                  className={`method-btn ${ttsMethod === 'google-tts' ? 'active' : ''}`}\n                  onClick={() => setTtsMethod('google-tts')}\n                  disabled={isConverting}\n                >\n                  🤖 Google TTS\n                </button>\n                <button \n                  className={`method-btn ${ttsMethod === 'external' ? 'active' : ''}`}\n                  onClick={() => setTtsMethod('external')}\n                  disabled={isConverting}\n                >\n                  🔗 API Externa\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"test-input\">\n              <input \n                type=\"text\" \n                placeholder=\"Digite sua mensagem aqui...\" \n                className=\"form-input\"\n                value={textInput}\n                onChange={(e) => setTextInput(e.target.value)}\n                disabled={isConverting}\n              />\n              <button \n                className={`btn btn-secondary ${isConverting ? 'converting' : ''}`}\n                onClick={handleTextToSpeech}\n                disabled={isConverting || !textInput.trim()}\n              >\n                <span className=\"btn-icon\">\n                  {isConverting ? '⏳' : '🔊'}\n                </span>\n                {isConverting ? 'CONVERTENDO...' : 'CONVERTER PARA VOZ'}\n              </button>\n            </div>\n            \n            {/* Controles de áudio */}\n            {audioUrl && (\n              <div className=\"audio-controls\">\n                <audio \n                  src={audioUrl} \n                  controls \n                  className=\"audio-player\"\n                />\n              </div>\n            )}\n            \n            {isPlaying && (\n              <div className=\"audio-status\">\n                <p className=\"playing-text\">🎵 Reproduzindo áudio...</p>\n                <button \n                  className=\"btn btn-secondary btn-small\"\n                  onClick={stopAudio}\n                >\n                  ⏹️ PARAR\n                </button>\n              </div>\n            )}\n            \n            <button \n              className={`btn btn-primary btn-large ${isCalling ? 'calling' : ''}`} \n              onClick={handleCall}\n              disabled={isCalling}\n            >\n              <span className=\"btn-icon\">{isCalling ? '⏳' : '🎤'}</span>\n              {isCalling ? 'CONECTANDO...' : 'LIGAR AGORA'}\n            </button>\n          </div>\n        );\n      \n      case 'speech-to-text':\n        return (\n          <div className=\"test-content\">\n            <div className=\"test-header\">\n              <h3 className=\"test-title\">VOZ PARA TEXTO</h3>\n              <h4 className=\"test-subtitle\">Transcrição em tempo real</h4>\n            </div>\n            <p className=\"test-description\">\n              Transforme áudio em texto com precisão natural para conteúdo, comunicação e acessibilidade.\n            </p>\n            <div className=\"test-buttons\">\n              <button className=\"btn btn-secondary\">\n                <span className=\"btn-icon\">🔴</span>\n                GRAVAR ÁUDIO\n              </button>\n              <button className=\"btn btn-secondary\">\n                <span className=\"btn-icon\">📁</span>\n                ENVIAR ARQUIVO\n              </button>\n            </div>\n            <button \n              className={`btn btn-primary btn-large ${isCalling ? 'calling' : ''} ${isInCall ? 'in-call' : ''}`} \n              onClick={handleCall}\n              disabled={isCalling}\n            >\n              <span className=\"btn-icon\">\n                {isCalling ? '⏳' : isInCall ? '📵' : '📞'}\n              </span>\n              {isCalling ? 'CONECTANDO...' : isInCall ? 'DESLIGAR' : 'LIGAR AGORA'}\n            </button>\n          </div>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <section className=\"test-section bg-white\">\n      <div className=\"container\">\n        <div className=\"test-container\">\n          <div className=\"test-tabs\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                className={`test-tab ${activeTab === tab.id ? 'active' : ''}`}\n                onClick={() => setActiveTab(tab.id)}\n              >\n                {tab.label}\n              </button>\n            ))}\n          </div>\n          \n          <div className=\"test-card\">\n            {renderContent()}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TestSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}