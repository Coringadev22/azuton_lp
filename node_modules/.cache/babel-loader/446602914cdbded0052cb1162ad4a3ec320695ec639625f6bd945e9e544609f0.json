{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport useForm from './useForm';\n\n/**\r\n * Hook específico para o formulário de orçamento/contato\r\n */\nconst useBudgetForm = () => {\n  _s();\n  // Valores iniciais do formulário\n  const initialValues = {\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    position: '',\n    comments: '',\n    budget: '',\n    timeline: '',\n    interestedIn: []\n  };\n\n  // Regras de validação\n  const validationRules = {\n    name: {\n      required: 'Nome é obrigatório',\n      minLength: 2,\n      custom: value => {\n        if (value && value.trim().length < 2) {\n          return 'Nome deve ter pelo menos 2 caracteres';\n        }\n        return '';\n      }\n    },\n    email: {\n      required: 'Email é obrigatório',\n      email: true\n    },\n    phone: {\n      required: 'Telefone é obrigatório',\n      phone: true\n    },\n    company: {\n      minLength: 2,\n      custom: value => {\n        if (value && value.trim().length < 2) {\n          return 'Nome da empresa deve ter pelo menos 2 caracteres';\n        }\n        return '';\n      }\n    },\n    comments: {\n      maxLength: 600,\n      custom: value => {\n        if (value && value.length > 600) {\n          return 'Comentários não podem exceder 600 caracteres';\n        }\n        return '';\n      }\n    }\n  };\n\n  // Função para submeter o formulário\n  const handleSubmit = useCallback(async formData => {\n    try {\n      console.log('Dados do formulário de orçamento:', formData);\n\n      // Aqui você pode integrar com APIs externas, enviar emails, etc.\n      // Por exemplo:\n      // await sendBudgetRequest(formData);\n\n      // Simulação de envio\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Sucesso\n      alert('Solicitação de orçamento enviada com sucesso! Entraremos em contato em breve.');\n    } catch (error) {\n      console.error('Erro ao enviar solicitação de orçamento:', error);\n      throw new Error('Erro ao enviar solicitação. Tente novamente.');\n    }\n  }, []);\n\n  // Usar o hook base\n  const form = useForm(initialValues, handleSubmit, validationRules);\n\n  // Funções específicas para o formulário de orçamento\n  const formatPhone = useCallback(value => {\n    // Remove tudo que não é número\n    const numbers = value.replace(/\\D/g, '');\n\n    // Aplica a máscara (XX) XXXXX-XXXX ou (XX) XXXX-XXXX\n    if (numbers.length <= 2) {\n      return numbers;\n    } else if (numbers.length <= 6) {\n      return `(${numbers.slice(0, 2)}) ${numbers.slice(2)}`;\n    } else if (numbers.length <= 10) {\n      return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 6)}-${numbers.slice(6)}`;\n    } else {\n      return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}-${numbers.slice(7, 11)}`;\n    }\n  }, []);\n\n  // Handler customizado para o telefone com formatação\n  const handlePhoneChange = useCallback(e => {\n    const formattedValue = formatPhone(e.target.value);\n    const syntheticEvent = {\n      ...e,\n      target: {\n        ...e.target,\n        value: formattedValue\n      }\n    };\n    form.handleChange(syntheticEvent);\n  }, [formatPhone, form.handleChange]);\n\n  // Função para adicionar/remover interesses\n  const toggleInterest = useCallback(interest => {\n    const currentInterests = form.formData.interestedIn || [];\n    const newInterests = currentInterests.includes(interest) ? currentInterests.filter(i => i !== interest) : [...currentInterests, interest];\n    const syntheticEvent = {\n      target: {\n        name: 'interestedIn',\n        value: newInterests\n      }\n    };\n    form.handleChange(syntheticEvent);\n  }, [form.formData.interestedIn, form.handleChange]);\n  return {\n    ...form,\n    handlePhoneChange,\n    toggleInterest,\n    formatPhone\n  };\n};\n_s(useBudgetForm, \"J82dEH75D9b5Er4v+fL4hzT2dHA=\", false, function () {\n  return [useForm];\n});\nexport default useBudgetForm;","map":{"version":3,"names":["useCallback","useForm","useBudgetForm","_s","initialValues","name","email","phone","company","position","comments","budget","timeline","interestedIn","validationRules","required","minLength","custom","value","trim","length","maxLength","handleSubmit","formData","console","log","Promise","resolve","setTimeout","alert","error","Error","form","formatPhone","numbers","replace","slice","handlePhoneChange","e","formattedValue","target","syntheticEvent","handleChange","toggleInterest","interest","currentInterests","newInterests","includes","filter","i"],"sources":["C:/Users/Doit/Desktop/azuton_lp/src/hooks/useBudgetForm.js"],"sourcesContent":["import { useCallback } from 'react';\r\nimport useForm from './useForm';\r\n\r\n/**\r\n * Hook específico para o formulário de orçamento/contato\r\n */\r\nconst useBudgetForm = () => {\r\n  // Valores iniciais do formulário\r\n  const initialValues = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    position: '',\r\n    comments: '',\r\n    budget: '',\r\n    timeline: '',\r\n    interestedIn: []\r\n  };\r\n\r\n  // Regras de validação\r\n  const validationRules = {\r\n    name: {\r\n      required: 'Nome é obrigatório',\r\n      minLength: 2,\r\n      custom: (value) => {\r\n        if (value && value.trim().length < 2) {\r\n          return 'Nome deve ter pelo menos 2 caracteres';\r\n        }\r\n        return '';\r\n      }\r\n    },\r\n    email: {\r\n      required: 'Email é obrigatório',\r\n      email: true\r\n    },\r\n    phone: {\r\n      required: 'Telefone é obrigatório',\r\n      phone: true\r\n    },\r\n    company: {\r\n      minLength: 2,\r\n      custom: (value) => {\r\n        if (value && value.trim().length < 2) {\r\n          return 'Nome da empresa deve ter pelo menos 2 caracteres';\r\n        }\r\n        return '';\r\n      }\r\n    },\r\n    comments: {\r\n      maxLength: 600,\r\n      custom: (value) => {\r\n        if (value && value.length > 600) {\r\n          return 'Comentários não podem exceder 600 caracteres';\r\n        }\r\n        return '';\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para submeter o formulário\r\n  const handleSubmit = useCallback(async (formData) => {\r\n    try {\r\n      console.log('Dados do formulário de orçamento:', formData);\r\n      \r\n      // Aqui você pode integrar com APIs externas, enviar emails, etc.\r\n      // Por exemplo:\r\n      // await sendBudgetRequest(formData);\r\n      \r\n      // Simulação de envio\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Sucesso\r\n      alert('Solicitação de orçamento enviada com sucesso! Entraremos em contato em breve.');\r\n      \r\n    } catch (error) {\r\n      console.error('Erro ao enviar solicitação de orçamento:', error);\r\n      throw new Error('Erro ao enviar solicitação. Tente novamente.');\r\n    }\r\n  }, []);\r\n\r\n  // Usar o hook base\r\n  const form = useForm(initialValues, handleSubmit, validationRules);\r\n\r\n  // Funções específicas para o formulário de orçamento\r\n  const formatPhone = useCallback((value) => {\r\n    // Remove tudo que não é número\r\n    const numbers = value.replace(/\\D/g, '');\r\n    \r\n    // Aplica a máscara (XX) XXXXX-XXXX ou (XX) XXXX-XXXX\r\n    if (numbers.length <= 2) {\r\n      return numbers;\r\n    } else if (numbers.length <= 6) {\r\n      return `(${numbers.slice(0, 2)}) ${numbers.slice(2)}`;\r\n    } else if (numbers.length <= 10) {\r\n      return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 6)}-${numbers.slice(6)}`;\r\n    } else {\r\n      return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}-${numbers.slice(7, 11)}`;\r\n    }\r\n  }, []);\r\n\r\n  // Handler customizado para o telefone com formatação\r\n  const handlePhoneChange = useCallback((e) => {\r\n    const formattedValue = formatPhone(e.target.value);\r\n    const syntheticEvent = {\r\n      ...e,\r\n      target: {\r\n        ...e.target,\r\n        value: formattedValue\r\n      }\r\n    };\r\n    form.handleChange(syntheticEvent);\r\n  }, [formatPhone, form.handleChange]);\r\n\r\n  // Função para adicionar/remover interesses\r\n  const toggleInterest = useCallback((interest) => {\r\n    const currentInterests = form.formData.interestedIn || [];\r\n    const newInterests = currentInterests.includes(interest)\r\n      ? currentInterests.filter(i => i !== interest)\r\n      : [...currentInterests, interest];\r\n    \r\n    const syntheticEvent = {\r\n      target: {\r\n        name: 'interestedIn',\r\n        value: newInterests\r\n      }\r\n    };\r\n    form.handleChange(syntheticEvent);\r\n  }, [form.formData.interestedIn, form.handleChange]);\r\n\r\n  return {\r\n    ...form,\r\n    handlePhoneChange,\r\n    toggleInterest,\r\n    formatPhone\r\n  };\r\n};\r\n\r\nexport default useBudgetForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}