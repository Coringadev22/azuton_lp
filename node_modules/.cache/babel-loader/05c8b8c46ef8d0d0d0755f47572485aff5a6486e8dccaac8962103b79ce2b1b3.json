{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\n\n/**\r\n * Hook para gerenciar envio de formulários para diferentes serviços\r\n */\nconst useFormSubmission = () => {\n  _s();\n  // Função para enviar para webhook (Zapier, Make.com, etc.)\n  const sendToWebhook = useCallback(async (formData, webhookUrl) => {\n    try {\n      const response = await fetch(webhookUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          timestamp: new Date().toISOString(),\n          source: 'azuton-landing-page'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erro no webhook: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao enviar para webhook:', error);\n      throw error;\n    }\n  }, []);\n\n  // Função para enviar email via API (EmailJS, SendGrid, etc.)\n  const sendEmail = useCallback(async (formData, emailConfig) => {\n    try {\n      // Exemplo usando EmailJS\n      if (emailConfig.service === 'emailjs') {\n        const emailjs = await import('@emailjs/browser');\n        const templateParams = {\n          from_name: formData.name,\n          from_email: formData.email,\n          phone: formData.phone,\n          company: formData.company,\n          position: formData.position,\n          message: formData.comments,\n          to_name: 'Equipe Azuton'\n        };\n        await emailjs.send(emailConfig.serviceId, emailConfig.templateId, templateParams, emailConfig.publicKey);\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Erro ao enviar email:', error);\n      throw error;\n    }\n  }, []);\n\n  // Função para salvar no Google Sheets\n  const saveToGoogleSheets = useCallback(async (formData, sheetsConfig) => {\n    try {\n      const response = await fetch(sheetsConfig.webhookUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp: new Date().toISOString(),\n          name: formData.name,\n          email: formData.email,\n          phone: formData.phone,\n          company: formData.company,\n          position: formData.position,\n          comments: formData.comments\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erro ao salvar no Google Sheets: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao salvar no Google Sheets:', error);\n      throw error;\n    }\n  }, []);\n\n  // Função para enviar para CRM (HubSpot, Salesforce, etc.)\n  const sendToCRM = useCallback(async (formData, crmConfig) => {\n    try {\n      let endpoint = '';\n      let headers = {};\n      let body = {};\n      switch (crmConfig.provider) {\n        case 'hubspot':\n          endpoint = `https://api.hubapi.com/crm/v3/objects/contacts`;\n          headers = {\n            'Authorization': `Bearer ${crmConfig.apiKey}`,\n            'Content-Type': 'application/json'\n          };\n          body = {\n            properties: {\n              firstname: formData.name.split(' ')[0],\n              lastname: formData.name.split(' ').slice(1).join(' '),\n              email: formData.email,\n              phone: formData.phone,\n              company: formData.company,\n              jobtitle: formData.position,\n              message: formData.comments\n            }\n          };\n          break;\n        case 'salesforce':\n          endpoint = `${crmConfig.instanceUrl}/services/data/v52.0/sobjects/Lead/`;\n          headers = {\n            'Authorization': `Bearer ${crmConfig.accessToken}`,\n            'Content-Type': 'application/json'\n          };\n          body = {\n            FirstName: formData.name.split(' ')[0],\n            LastName: formData.name.split(' ').slice(1).join(' '),\n            Email: formData.email,\n            Phone: formData.phone,\n            Company: formData.company,\n            Title: formData.position,\n            Description: formData.comments\n          };\n          break;\n        default:\n          throw new Error('Provedor de CRM não suportado');\n      }\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        throw new Error(`Erro no CRM: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao enviar para CRM:', error);\n      throw error;\n    }\n  }, []);\n\n  // Função principal que coordena todos os envios\n  const submitForm = useCallback(async (formData, config = {}) => {\n    const results = {};\n    const errors = [];\n    try {\n      // Enviar para webhook se configurado\n      if (config.webhook) {\n        try {\n          results.webhook = await sendToWebhook(formData, config.webhook.url);\n        } catch (error) {\n          errors.push({\n            service: 'webhook',\n            error: error.message\n          });\n        }\n      }\n\n      // Enviar email se configurado\n      if (config.email) {\n        try {\n          results.email = await sendEmail(formData, config.email);\n        } catch (error) {\n          errors.push({\n            service: 'email',\n            error: error.message\n          });\n        }\n      }\n\n      // Salvar no Google Sheets se configurado\n      if (config.googleSheets) {\n        try {\n          results.googleSheets = await saveToGoogleSheets(formData, config.googleSheets);\n        } catch (error) {\n          errors.push({\n            service: 'googleSheets',\n            error: error.message\n          });\n        }\n      }\n\n      // Enviar para CRM se configurado\n      if (config.crm) {\n        try {\n          results.crm = await sendToCRM(formData, config.crm);\n        } catch (error) {\n          errors.push({\n            service: 'crm',\n            error: error.message\n          });\n        }\n      }\n\n      // Se houve erros em alguns serviços mas pelo menos um funcionou\n      if (errors.length > 0 && Object.keys(results).length > 0) {\n        console.warn('Alguns serviços falharam:', errors);\n        return {\n          success: true,\n          results,\n          warnings: errors\n        };\n      }\n\n      // Se todos os serviços falharam\n      if (errors.length > 0 && Object.keys(results).length === 0) {\n        throw new Error('Falha em todos os serviços de envio');\n      }\n      return {\n        success: true,\n        results\n      };\n    } catch (error) {\n      console.error('Erro geral no envio:', error);\n      throw error;\n    }\n  }, [sendToWebhook, sendEmail, saveToGoogleSheets, sendToCRM]);\n  return {\n    submitForm,\n    sendToWebhook,\n    sendEmail,\n    saveToGoogleSheets,\n    sendToCRM\n  };\n};\n_s(useFormSubmission, \"DRakdOW/tpFMOksAqYxBwk+NE+A=\");\nexport default useFormSubmission;","map":{"version":3,"names":["useCallback","useFormSubmission","_s","sendToWebhook","formData","webhookUrl","response","fetch","method","headers","body","JSON","stringify","timestamp","Date","toISOString","source","ok","Error","status","json","error","console","sendEmail","emailConfig","service","emailjs","templateParams","from_name","name","from_email","email","phone","company","position","message","comments","to_name","send","serviceId","templateId","publicKey","success","saveToGoogleSheets","sheetsConfig","sendToCRM","crmConfig","endpoint","provider","apiKey","properties","firstname","split","lastname","slice","join","jobtitle","instanceUrl","accessToken","FirstName","LastName","Email","Phone","Company","Title","Description","submitForm","config","results","errors","webhook","url","push","googleSheets","crm","length","Object","keys","warn","warnings"],"sources":["C:/Users/Doit/Desktop/azuton_lp/src/hooks/useFormSubmission.js"],"sourcesContent":["import { useCallback } from 'react';\r\n\r\n/**\r\n * Hook para gerenciar envio de formulários para diferentes serviços\r\n */\r\nconst useFormSubmission = () => {\r\n  \r\n  // Função para enviar para webhook (Zapier, Make.com, etc.)\r\n  const sendToWebhook = useCallback(async (formData, webhookUrl) => {\r\n    try {\r\n      const response = await fetch(webhookUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          timestamp: new Date().toISOString(),\r\n          source: 'azuton-landing-page'\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erro no webhook: ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao enviar para webhook:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Função para enviar email via API (EmailJS, SendGrid, etc.)\r\n  const sendEmail = useCallback(async (formData, emailConfig) => {\r\n    try {\r\n      // Exemplo usando EmailJS\r\n      if (emailConfig.service === 'emailjs') {\r\n        const emailjs = await import('@emailjs/browser');\r\n        \r\n        const templateParams = {\r\n          from_name: formData.name,\r\n          from_email: formData.email,\r\n          phone: formData.phone,\r\n          company: formData.company,\r\n          position: formData.position,\r\n          message: formData.comments,\r\n          to_name: 'Equipe Azuton'\r\n        };\r\n\r\n        await emailjs.send(\r\n          emailConfig.serviceId,\r\n          emailConfig.templateId,\r\n          templateParams,\r\n          emailConfig.publicKey\r\n        );\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erro ao enviar email:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Função para salvar no Google Sheets\r\n  const saveToGoogleSheets = useCallback(async (formData, sheetsConfig) => {\r\n    try {\r\n      const response = await fetch(sheetsConfig.webhookUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          timestamp: new Date().toISOString(),\r\n          name: formData.name,\r\n          email: formData.email,\r\n          phone: formData.phone,\r\n          company: formData.company,\r\n          position: formData.position,\r\n          comments: formData.comments\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao salvar no Google Sheets: ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao salvar no Google Sheets:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Função para enviar para CRM (HubSpot, Salesforce, etc.)\r\n  const sendToCRM = useCallback(async (formData, crmConfig) => {\r\n    try {\r\n      let endpoint = '';\r\n      let headers = {};\r\n      let body = {};\r\n\r\n      switch (crmConfig.provider) {\r\n        case 'hubspot':\r\n          endpoint = `https://api.hubapi.com/crm/v3/objects/contacts`;\r\n          headers = {\r\n            'Authorization': `Bearer ${crmConfig.apiKey}`,\r\n            'Content-Type': 'application/json'\r\n          };\r\n          body = {\r\n            properties: {\r\n              firstname: formData.name.split(' ')[0],\r\n              lastname: formData.name.split(' ').slice(1).join(' '),\r\n              email: formData.email,\r\n              phone: formData.phone,\r\n              company: formData.company,\r\n              jobtitle: formData.position,\r\n              message: formData.comments\r\n            }\r\n          };\r\n          break;\r\n\r\n        case 'salesforce':\r\n          endpoint = `${crmConfig.instanceUrl}/services/data/v52.0/sobjects/Lead/`;\r\n          headers = {\r\n            'Authorization': `Bearer ${crmConfig.accessToken}`,\r\n            'Content-Type': 'application/json'\r\n          };\r\n          body = {\r\n            FirstName: formData.name.split(' ')[0],\r\n            LastName: formData.name.split(' ').slice(1).join(' '),\r\n            Email: formData.email,\r\n            Phone: formData.phone,\r\n            Company: formData.company,\r\n            Title: formData.position,\r\n            Description: formData.comments\r\n          };\r\n          break;\r\n\r\n        default:\r\n          throw new Error('Provedor de CRM não suportado');\r\n      }\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erro no CRM: ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao enviar para CRM:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Função principal que coordena todos os envios\r\n  const submitForm = useCallback(async (formData, config = {}) => {\r\n    const results = {};\r\n    const errors = [];\r\n\r\n    try {\r\n      // Enviar para webhook se configurado\r\n      if (config.webhook) {\r\n        try {\r\n          results.webhook = await sendToWebhook(formData, config.webhook.url);\r\n        } catch (error) {\r\n          errors.push({ service: 'webhook', error: error.message });\r\n        }\r\n      }\r\n\r\n      // Enviar email se configurado\r\n      if (config.email) {\r\n        try {\r\n          results.email = await sendEmail(formData, config.email);\r\n        } catch (error) {\r\n          errors.push({ service: 'email', error: error.message });\r\n        }\r\n      }\r\n\r\n      // Salvar no Google Sheets se configurado\r\n      if (config.googleSheets) {\r\n        try {\r\n          results.googleSheets = await saveToGoogleSheets(formData, config.googleSheets);\r\n        } catch (error) {\r\n          errors.push({ service: 'googleSheets', error: error.message });\r\n        }\r\n      }\r\n\r\n      // Enviar para CRM se configurado\r\n      if (config.crm) {\r\n        try {\r\n          results.crm = await sendToCRM(formData, config.crm);\r\n        } catch (error) {\r\n          errors.push({ service: 'crm', error: error.message });\r\n        }\r\n      }\r\n\r\n      // Se houve erros em alguns serviços mas pelo menos um funcionou\r\n      if (errors.length > 0 && Object.keys(results).length > 0) {\r\n        console.warn('Alguns serviços falharam:', errors);\r\n        return { success: true, results, warnings: errors };\r\n      }\r\n\r\n      // Se todos os serviços falharam\r\n      if (errors.length > 0 && Object.keys(results).length === 0) {\r\n        throw new Error('Falha em todos os serviços de envio');\r\n      }\r\n\r\n      return { success: true, results };\r\n    } catch (error) {\r\n      console.error('Erro geral no envio:', error);\r\n      throw error;\r\n    }\r\n  }, [sendToWebhook, sendEmail, saveToGoogleSheets, sendToCRM]);\r\n\r\n  return {\r\n    submitForm,\r\n    sendToWebhook,\r\n    sendEmail,\r\n    saveToGoogleSheets,\r\n    sendToCRM\r\n  };\r\n};\r\n\r\nexport default useFormSubmission;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}